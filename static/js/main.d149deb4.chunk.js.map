{"version":3,"sources":["configs/routes.js","logo.svg","App.js","reportWebVitals.js","index.js"],"names":["routes","path","component","Home","text","TVShows","Movies","Favorite","makeStyles","appBarSpace","height","App","darkTheme","createMuiTheme","palette","type","primary","main","red","secondary","pink","lightTheme","blue","useState","isDark","toggleIsDark","useEffect","document","body","style","backgroundColor","ThemeProvider","theme","AppBar","map","route","MovieDetail","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"2bA4BeA,EAvBA,CACX,CACIC,KAAM,IACNC,UAAWC,IACXC,KAAM,QAEV,CACIH,KAAM,YACNC,UAAWG,IACXD,KAAM,YAEV,CACIH,KAAM,UACNC,UAAWI,IACXF,KAAM,UAEV,CACIH,KAAM,YACNC,UAAWK,IACXH,KAAM,a,oBCxBC,I,aCUGI,YAAW,CAC3BC,YAAa,CACXC,OAAQ,MAgEGC,MA5Df,WAEE,IAAMC,EAAYC,YAAe,CAC/BC,QAAS,CACPC,KAAM,OACNC,QAAS,CACPC,KAAMC,IAAI,MAEZC,UAAW,CACTF,KAAMG,IAAK,SAKXC,EAAaR,YAAe,CAChCC,QAAS,CACPC,KAAM,QACNC,QAAS,CACPC,KAAMK,IAAK,MAEbH,UAAW,CACTF,KAAMG,IAAK,SAKjB,EAA+BG,oBAAS,GAAxC,mBAAOC,EAAP,KAAeC,EAAf,KAUA,OARAC,qBAAU,WAENC,SAASC,KAAKC,MAAMC,gBADnBN,EACqC,UAEA,SAEvC,CAACA,IAGF,cAAC,IAAD,UACE,eAACO,EAAA,EAAD,CAAeC,MAAOR,EAASZ,EAAYS,EAA3C,UACE,cAACY,EAAA,EAAD,CAAQD,MAAO,CAAER,SAAQC,kBACzB,eAAC,IAAD,WACGzB,EAAOkC,KAAI,SAACC,GACV,IAEYA,EAAMjC,UACXiC,EAAMlC,KACLkC,EAAMlC,KAHRkC,EAAMlC,QAMf,cAAC,IAAD,CAEEC,UAAWkC,IACXnC,KAAK,cAFD,yBCtDDoC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFrB,SAASsB,eAAe,SAM1BZ,M","file":"static/js/main.d149deb4.chunk.js","sourcesContent":["import Home from '../containers/Home';\r\nimport Movies from '../containers/Movies';\r\nimport TVShows from '../containers/TvShows';\r\nimport Favorite from '../containers/Favorite';\r\n\r\nconst routes = [\r\n    {\r\n        path: '/',\r\n        component: Home,\r\n        text: 'Home'\r\n    },\r\n    {\r\n        path: '/tv-shows',\r\n        component: TVShows,\r\n        text: 'TV Shows'\r\n    },\r\n    {\r\n        path: '/movies',\r\n        component: Movies,\r\n        text: 'Movies'\r\n    },\r\n    {\r\n        path: '/favorite',\r\n        component: Favorite,\r\n        text: 'Favorite'\r\n    },\r\n];\r\n\r\nexport default routes;","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useEffect, useState } from 'react';\nimport { createMuiTheme, ThemeProvider, makeStyles } from '@material-ui/core';\nimport { blue, pink, red } from '@material-ui/core/colors';\nimport { AppBar } from '@material-ui/core';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport routes from './configs/routes';\nimport MovieDetail from './containers/MovieDetail';\nimport logo from './logo.svg';\nimport './App.css';\n\nconst useStyles = makeStyles({\n  appBarSpace: {\n    height: 64,\n  }\n});\n\nfunction App() {\n\n  const darkTheme = createMuiTheme({\n    palette: {\n      type: 'dark',\n      primary: {\n        main: red[500],\n      },\n      secondary: {\n        main: pink[500],\n      }\n    }\n  });\n\n  const lightTheme = createMuiTheme({\n    palette: {\n      type: 'light',\n      primary: {\n        main: blue[500],\n      },\n      secondary: {\n        main: pink[500],\n      }\n    }\n  });\n\n  const [isDark, toggleIsDark] = useState(true);\n\n  useEffect(() => {\n    if(isDark){\n      document.body.style.backgroundColor = '#212121';\n    } else {\n      document.body.style.backgroundColor = '#fff';\n    }\n  }, [isDark])\n\n  return (\n    <Router>\n      <ThemeProvider theme={isDark ? darkTheme : lightTheme}>\n        <AppBar theme={{ isDark, toggleIsDark }} />\n        <Switch>\n          {routes.map((route) => {\n            <Route \n              key={route.path}\n              component={route.component}\n              path={route.path}\n              exact={route.path === '/'}\n            />\n          })}\n          <Route \n            key=\"movie-detail\"\n            component={MovieDetail}\n            path=\"/movie/:id\"\n          />\n        </Switch>\n      </ThemeProvider>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}